# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  production:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Pipfile" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: echo 'export PATH="$PATH:/home/circleci/.local/bin"' >> $BASH_ENV
      - run: cat $BASH_ENV
      - run:
          name: install dependencies
          command: |
            pip3 install pipenv --user 
            pipenv --three install 
            

      - save_cache:
          paths:
            - ~/.cache
          key: v1-dependencies-{{ checksum "Pipfile" }}
        
      - run:
          name: build slides
          command: |
            echo $GCS | base64 -d > 2600.json 
            mkdir auth
            echo $FEEDLYREFRESH | base64 -d -w 0 > auth/refresh.token
            echo $FEEDLYTOKEN | base64 -d -w 0 > auth/access.token
            pipenv run python l2ppt.py -f ./auth

      - store_artifacts:
          path: build/2600.md
          destination: build/2600.md

      - persist_to_workspace: 
          root: /home/circleci
          paths:
            - repo

  production_containers:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Pipfile" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: echo 'export PATH="$PATH:/home/circleci/.local/bin"' >> $BASH_ENV
      - run: cat $BASH_ENV
      - run:
          name: install dependencies
          command: |
            pip3 install pipenv --user 
            pipenv --three install 
            

      - save_cache:
          paths:
            - ~/.cache
          key: v1-dependencies-{{ checksum "Pipfile" }}
        
      - run:
          name: build slides
          command: |
            echo $GCS | base64 -d > 2600.json 
            mkdir auth
            echo $FEEDLYREFRESH | base64 -d -w 0 > auth/refresh.token
            echo $FEEDLYTOKEN | base64 -d -w 0 > auth/access.token
            pipenv run python l2ppt.py -f ./auth --tag Docker --no-meme

      - store_artifacts:
          path: build/Docker.md
          destination: build/Docker.md

      - persist_to_workspace: 
          root: /home/circleci
          paths:
            - repo

  deploy_containers:
    docker:
      - image: circleci/python:2
    #working_directory: ~/

    steps:
      #- checkout

      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "Pipfile" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-
      - attach_workspace:
          at: /home/circleci

      - run: echo 'export PATH="$PATH:/home/circleci/.local/bin"' >> $BASH_ENV
      - run: cd ~/repo
      - run:
          name: fucking gsutil install
          command: |
            pip install gsutil --user

      - run:
          name: run deploy script
          command: |
            cd ~/repo/tools
            echo $GCS | base64 -d > 2600.json 
            export ENDPOINT="gs://containers.antitree.com"
            ./deploy.sh

  deploy:
    docker:
      - image: circleci/python:2
    #working_directory: ~/

    steps:
      #- checkout

      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "Pipfile" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-
      - attach_workspace:
          at: /home/circleci

      - run: echo 'export PATH="$PATH:/home/circleci/.local/bin"' >> $BASH_ENV
      - run: cd ~/repo
      - run:
          name: fucking gsutil install
          command: |
            pip install gsutil --user

      - run:
          name: run deploy script
          command: |
            cd ~/repo/tools
            echo $GCS | base64 -d > 2600.json 
            ./deploy.sh

workflows:
  version: 2
  commit:
    jobs:
      #- build
      - production
      - production_containers
      - deploy:
          requires:
            #- build
            - production  # test
      - deploy_containers:
          requires:
            - production_containers
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
    jobs:
      - production
      - production_containers
      - deploy:
          requires:
            - production
            - production_containers
          filters:
            branches:
              only: master
      - deploy_containers:
          requires:
            - production_containers